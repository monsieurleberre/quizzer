{"0":{
    "question": "Which of these systems has Cassandra emerged from?",
    "answerType": "many",
    "answers": {  "Amazon DynamoDB" : { "score" : 1 },  "Apache Hadoop" : { "score" : -1 },  "Cassandra itself; it's both a chicken and an egg! " : { "score" : 1 },  "Google big tables" : { "score" : 1 },  "Microsoft Azure DocumentDB" : { "score" : 1 }},
    "tags": [ "basic" ],
    "explanation": null,
    "tip": null
  },
  "1":{
    "question": "What are some valid use cases for a Cassandra database",
    "answerType": "many",
    "answers": {  "Fraud detection" : { "score" : 1 },  "High ACID transactions workload" : { "score" : -1 },  "High availability distributed queues" : { "score" : -1 },  "IoT and sensor data management" : { "score" : -1 }},
    "tags": [ "basic" ],
    "explanation": "High ACID transactions workload is better addressed by traditional relational database systems.\nImplementation of queues is an anti-pattern in Cassandra:\nhttp://www.datastax.com/dev/blog/cassandra-anti-patterns-queues-and-queue-like-datasets",
    "tip": null
  },
  "2":{
    "question": "How many round trips are necessary to perform a light weight transaction ?",
    "answerType": "one",
    "answers": {  "2" : { "score" : -1 },  "3" : { "score" : -1 },  "4" : { "score" : 1 },  "6" : { "score" : -1 }},
    "tags": [ "basic" ],
    "explanation": "Prepare <-> Promise, then Read <-> Results, then Propose <-> Accept and finally Commit <-> Acknowledge. Cf http://www.datastax.com/dev/blog/lightweight-transactions-in-cassandra-2-null",
    "tip": "Cassandra uses the Paxos consensus protocol"
  },
  "3":{
    "question": "Which of these functionalities is not provided by CQL ?",
    "answerType": "many",
    "answers": {  "Inter Node gossiping" : { "score" : 1 },  "NoSQL schema definition" : { "score" : -1 },  "Per query consistency level" : { "score" : -1 },  "Replace the Thrift API for a more SQL-like language" : { "score" : -1 }},
    "tags": [ "basic" ],
    "explanation": null,
    "tip": null
  },
  "4":{
    "question": "Which of these criteria usually characterise the information treated by Big Data applications ?",
    "answerType": "many",
    "answers": {  "High Confidentiality" : { "score" : -1 },  "High Longevity" : { "score" : -1 },  "High Velocity" : { "score" : 1 },  "Large Variety" : { "score" : 1 },  "Large Volume" : { "score" : 1 }},
    "tags": [ "basic" ],
    "explanation": "Prepare <-> Promise, then Read <-> Results, then Propose <-> Accept and finally Commit <-> Acknowledge. Cf http://www.datastax.com/dev/blog/lightweight-transactions-in-cassandra-2-null",
    "tip": null
  },
  "5":{
    "question": "What are some traits of a Cassandra database ?",
    "answerType": "many",
    "answers": {  "Eventually consistent" : { "score" : 1 },  "Linearly scalable" : { "score" : 1 },  "No single point of failure" : { "score" : 1 },  "Strongly normalised" : { "score" : -1 }},
    "tags": [ "basic" ],
    "explanation": null,
    "tip": null
  },
  "6":{
    "question": "Which of these aspects is the CAP theorem about?",
    "answerType": "many",
    "answers": {  "Atomicity" : { "score" : -1 },  "Availability" : { "score" : 1 },  "Cluster tolerance" : { "score" : -1 },  "Consistency" : { "score" : 1 },  "Partition tolerance" : { "score" : 1 },  "Promises" : { "score" : -1 }},
    "tags": [ "basic" ],
    "explanation": null,
    "tip": null
  },
  "7":{
    "question": "How would you synchronise clocks between your cluster's nodes ?",
    "answerType": "one",
    "answers": {  "All hosts need to have synchronised clocks" : { "score" : 1 },  "Clocks should be synchronised between hosts from the same physical rack" : { "score" : -1 },  "Clocks should usually be synchronised on a geographical / per datacenter basis" : { "score" : -1 },  "Gossiping takes care of clock synchronisation, there is no need to do anything special" : { "score" : 1 }},
    "tags": [ "basic" ],
    "explanation": null,
    "tip": null
  },
  "8":{
    "question": "When did Cassandra become a top level Apache project?",
    "answerType": "one",
    "answers": {  "2006" : { "score" : -1 },  "2008" : { "score" : -1 },  "2010" : { "score" : 1 },  "2012" : { "score" : -1 }},
    "tags": [ "basic" ],
    "explanation": null,
    "tip": null
  },
  "9":{
    "question": "In a production environment, is it advised to turn off swapping,  why?",
    "answerType": "one",
    "answers": {  "No: Disabling swapping would imply loss of in memory data and result in inconsistent data" : { "score" : -1 },  "No: Swapping is the mechanisme that allows Cassandra to swap nodes during a query, making the cluster more resilient in case of downed nodes" : { "score" : -1 },  "Yes: Swapping can cause latency spikes as the memory gets paged to the hard drive" : { "score" : 1 },  "Yes: Swapping can fill in the hard drives on the host" : { "score" : -1 }},
    "tags": [ "basic" ],
    "explanation": "Prepare <-> Promise, then Read <-> Results, then Propose <-> Accept and finally Commit <-> Acknowledge. Cf http://www.datastax.com/dev/blog/lightweight-transactions-in-cassandra-2-null",
    "tip": "would you really run a \"sudo swap off -all\" ?"
  },
 "10": {
    "question": "Which of these 3 factor is Cassandra focused on ?",
    "answerType": "many",
    "answers": {  "Availability" : { "score" : 1 },  "Consistency" : { "score" : -1 },  "Partition Tolerance" : { "score" : 1 }},
    "tags": [ "basic" ],
    "explanation": "Cassandra is an eventually consistent data store, the emphasis is put on availability and partition tolerance through the use of replication and peer to peer node communication.\nhttps://academy.datastax.com/courses/ds2null1-cassandra-core-concepts/introduction-big-data at 7'14",
    "tip": "Remember the CAP Theorem?"
  },
 "11": {
    "question": "What is the performance penalty / gain incurred by a light weight transaction (LWT) VS a standard write",
    "answerType": "one",
    "answers": {  "LWT is approx. 2 times faster" : { "score" : -1 },  "LWT is approx. 2 times slower" : { "score" : -1 },  "LWT is approx. 4 times slower" : { "score" : -1 },  "LWT is approx. 6 times slower" : { "score" : 1 }},
    "tags": [ "basic" ],
    "explanation": null,
    "tip": null
  }
}
